"use strict";(self.webpackChunkhugo_code_star_site=self.webpackChunkhugo_code_star_site||[]).push([[3434],{3905:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return c}});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function u(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var o=t.createContext({}),m=function(e){var n=t.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},s=function(e){var n=m(e.components);return t.createElement(o.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=m(r),c=i,f=p["".concat(o,".").concat(c)]||p[c]||d[c]||a;return r?t.createElement(f,l(l({ref:n},s),{},{components:r})):t.createElement(f,l({ref:n},s))}));function c(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=p;var u={};for(var o in n)hasOwnProperty.call(n,o)&&(u[o]=n[o]);u.originalType=e,u.mdxType="string"==typeof e?e:i,l[1]=u;for(var m=2;m<a;m++)l[m]=r[m];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8289:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return u},contentTitle:function(){return o},metadata:function(){return m},toc:function(){return s},default:function(){return p}});var t=r(7462),i=r(3366),a=(r(7294),r(3905)),l=["components"],u={title:"Programmes \xe0 faire de l'atelier 1",sidebar_label:"1 - Bases"},o="Scripts, variables, saisies et affichages",m={unversionedId:"db4/atelier/atelier1",id:"db4/atelier/atelier1",isDocsHomePage:!1,title:"Programmes \xe0 faire de l'atelier 1",description:"Allo, Monde!",source:"@site/docs/db4/atelier/atelier1.md",sourceDirName:"db4/atelier",slug:"/db4/atelier/atelier1",permalink:"/site/docs/db4/atelier/atelier1",editUrl:"https://github.com/HugoCodeStar/site/edit/master/docs/db4/atelier/atelier1.md",tags:[],version:"current",frontMatter:{title:"Programmes \xe0 faire de l'atelier 1",sidebar_label:"1 - Bases"},sidebar:"DB4Sidebar",previous:{title:"4 - Numpy et pandas",permalink:"/site/docs/db4/cours/cours4"},next:{title:"2 - Listes, fichiers et chaines de caract\xe8res",permalink:"/site/docs/db4/atelier/atelier2"}},s=[{value:"Allo, Monde!",id:"allo-monde",children:[]},{value:"Horaire",id:"horaire",children:[{value:"Bonus",id:"bonus",children:[]}]},{value:"Double du nombre",id:"double-du-nombre",children:[]},{value:"Carr\xe9 du nombre",id:"carr\xe9-du-nombre",children:[]},{value:"Nom et pr\xe9nom",id:"nom-et-pr\xe9nom",children:[]},{value:"Multiplie deux nombres",id:"multiplie-deux-nombres",children:[]},{value:"positifNegatifNul",id:"positifnegatifnul",children:[]},{value:"minimumEntreDeux",id:"minimumentredeux",children:[]},{value:"quadrantCartesien",id:"quadrantcartesien",children:[]},{value:"imcPersonne",id:"imcpersonne",children:[]},{value:"minimumEntreTrois",id:"minimumentretrois",children:[]},{value:"whileDepassement",id:"whiledepassement",children:[]},{value:"compteurImpaire",id:"compteurimpaire",children:[]},{value:"compteurBorne",id:"compteurborne",children:[]},{value:"compteurBorneFor",id:"compteurbornefor",children:[]},{value:"diviseurNombre",id:"diviseurnombre",children:[]},{value:"carreEtoile",id:"carreetoile",children:[]},{value:"triangleEtoile",id:"triangleetoile",children:[]},{value:"nombrePremier",id:"nombrepremier",children:[]},{value:"inverse_additif",id:"inverse_additif",children:[]},{value:"inverse_multiplicatif",id:"inverse_multiplicatif",children:[]},{value:"compteur_entre_borne",id:"compteur_entre_borne",children:[]},{value:"factoriel",id:"factoriel",children:[]},{value:"saisit_entre_borne",id:"saisit_entre_borne",children:[]},{value:"maximum_de_deux",id:"maximum_de_deux",children:[]},{value:"maximum_de_trois",id:"maximum_de_trois",children:[]},{value:"maximum_de_quatre",id:"maximum_de_quatre",children:[]},{value:"pgcd",id:"pgcd",children:[]},{value:"est_premier",id:"est_premier",children:[]},{value:"affiche_n_nombre_premier",id:"affiche_n_nombre_premier",children:[]},{value:"n_diviseur",id:"n_diviseur",children:[]}],d={toc:s};function p(e){var n=e.components,r=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"scripts-variables-saisies-et-affichages"},"Scripts, variables, saisies et affichages"),(0,a.kt)("h2",{id:"allo-monde"},"Allo, Monde!"),(0,a.kt)("p",null,'Affiche le message "Allo, monde!" dans la fen\xeatre de commande.'),(0,a.kt)("h2",{id:"horaire"},"Horaire"),(0,a.kt)("p",null,"Affiche l'horaire suivant dans le fen\xeatre de commande:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Horaire:\n7h00 \u2013 d\xe9jeuner\n12h00 \u2013 diner\n17h00 \u2013 souper\n")),(0,a.kt)("h3",{id:"bonus"},"Bonus"),(0,a.kt)("p",null,"Utilisez seulement qu'un seul appel \xe0 la fonction ",(0,a.kt)("inlineCode",{parentName:"p"},"print")," avec une utilisation de caract\xe8res d'\xe9chapement."),(0,a.kt)("h2",{id:"double-du-nombre"},"Double du nombre"),(0,a.kt)("p",null,"Demande \xe0 l\u2019utilisateur de saisir un nombre, le script affiche ensuite\nle double (multiplication par 2) du nombre. L'affichage prends la forme\n",(0,a.kt)("inlineCode",{parentName:"p"},"Double du nombre : NOMBRE"),"."),(0,a.kt)("h2",{id:"carr\xe9-du-nombre"},"Carr\xe9 du nombre"),(0,a.kt)("p",null,"Demande \xe0 l'utilisateur de saisir un nombre, le script affiche ensuite le\nnombre au carr\xe9 (multipli\xe9 par lui-m\xeame). L'affichage prends la forme\n",(0,a.kt)("inlineCode",{parentName:"p"},"Carr\xe9 du nombre : NOMBRE"),"."),(0,a.kt)("h2",{id:"nom-et-pr\xe9nom"},"Nom et pr\xe9nom"),(0,a.kt)("p",null,"Demande \xe0 l\u2019utilisateur de saisir le nom suivi du pr\xe9nom de l'utilisateur\n(avec deux saisis disctinctes). Le script affiche les message suivant\navec le nom et pr\xe9nom de l'utilisateur ",(0,a.kt)("inlineCode",{parentName:"p"},"Bonjour PRENOM NOM!"),"."),(0,a.kt)("h2",{id:"multiplie-deux-nombres"},"Multiplie deux nombres"),(0,a.kt)("p",null,"Demande \xe0 l'utilisateur de saisir deux nombres et affiche le produit des deux nombres. L'affichage prends la forme ",(0,a.kt)("inlineCode",{parentName:"p"},"NOMBRE1 x NOMBRE2 = PRODUIT"),"."),(0,a.kt)("h1",{id:"conditionnels-boucles-et-op\xe9rateurs-logiques"},"Conditionnels, boucles et op\xe9rateurs logiques"),(0,a.kt)("h2",{id:"positifnegatifnul"},"positifNegatifNul"),(0,a.kt)("p",null,"Demande \xe0 l'utilisateur de saisir un nombre. Le script affiche si le\nnombre est positif, n\xe9gatif ou nul. L'affichage prends la forme ",(0,a.kt)("inlineCode",{parentName:"p"},"Le nombre est positif."),"\n, ",(0,a.kt)("inlineCode",{parentName:"p"},"Le nombre est n\xe9gatif.")," ou ",(0,a.kt)("inlineCode",{parentName:"p"},"Le nombre est nul."),"\ntous suivis d'un saut \xe0 la ligne."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"Entrez un nombre: -34\nLe nombre est n\xe9gatif.\n")),(0,a.kt)("h2",{id:"minimumentredeux"},"minimumEntreDeux"),(0,a.kt)("p",null,"Demande \xe0 l'utilisateur de saisir deux nombres. Le script affiche ensuite\nle plus petit des deux nombres. L'affichage prends la forme ",(0,a.kt)("inlineCode",{parentName:"p"},"Plus petit :\nNOMBRE")," suivi d'un saut de ligne."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"Veuillez entrer un premier nombre: 43\nVeuillez entrer un second nombre: 65\nPlus petit : 43\n")),(0,a.kt)("h2",{id:"quadrantcartesien"},"quadrantCartesien"),(0,a.kt)("p",null,"Demande \xe0 l'utilisateur de saisir deux coordonn\xe9es. Les saisies\nrepr\xe9sente les coordonn\xe9es x et y d'un point sur un plan cart\xe9sien. Le\nscript affiche dans quel quadrant appartient le point. L'affichage prends\nla forme ",(0,a.kt)("inlineCode",{parentName:"p"},"(X, Y) est dans le quadrant : QUADRANT."),' suivi d\'un saut de\nligne. La valeur QUADRANT peut \xeatre "I", "II", "III" ou "IV".'),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://fr.wikipedia.org/wiki/Quadrant_(math%C3%A9matiques)"},"Quadrant Cart\xe9siens Wikipedia")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"Veuillez entrer la coordonn\xe9e en x: -4\nVeuillez entrer la coordonn\xe9e en y: 6\n(-4, 6) est dans le quadrant : II.\n")),(0,a.kt)("h2",{id:"imcpersonne"},"imcPersonne"),(0,a.kt)("p",null,"Demande \xe0 l'utilisateur de saisir son poids (en kg) et sa taille (en m).\nLe script calcule l'indice de masse corporelle en utilisant la forumule\nsuivante:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"IMC = poids / (taille * taille)\n")),(0,a.kt)("p",null,"Le script affiche ensuite la cat\xe9gorie de l'IMC selon les crit\xe8res\nsuivant : si l'IMC est plus petit que 18.5, l'utilisateur est \"maigre\",\nsi l'IMC est plus grand ou \xe9gal \xe0 18.5 et plus petit que 30,\nl'utilisateur est \"normale\" et si l'utilisateur est plug grand ou \xe9gal \xe0\n30, l'utilisateur est \"ob\xe8se\". L'affichage prends la forme ",(0,a.kt)("inlineCode",{parentName:"p"},"Cat\xe9gorie IMC : CAT\xc9GORIE"),"\nsuivi d'un saut de ligne."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://fr.wikipedia.org/wiki/Indice_de_masse_corporelle"},"IMC Wikipedia")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"Veuillez entrer votre poids (en kg.): 65\nVeuillez entrer votre taille (en m.): 1.65\nCat\xe9gorie IMC : normale\n")),(0,a.kt)("h2",{id:"minimumentretrois"},"minimumEntreTrois"),(0,a.kt)("p",null,"Demande \xe0 l'utilisateur de saisir trois nombres. Le script affiche le\nplus petit des trois nombres. Le script doit aussi affich\xe9 un message si\nil y a eu \xe9galit\xe9 sur le plut petit nombre. L'affichage de base prends la forme\n",(0,a.kt)("inlineCode",{parentName:"p"},"Plus petit : NOMBRE")," suivi d'un saut de ligne. L'affichage de l'\xe9galit\xe9\nprends la forme \"Il y a eu \xe9galit\xe9.\" suivi d'un saut de ligne."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"Entrez un nombre: 34\nEntrez un autre nombre: 67\nEntrez un dernier nombre: 32\nPlus petit : 32\n")),(0,a.kt)("h2",{id:"whiledepassement"},"whileDepassement"),(0,a.kt)("p",null,"Saisit un nombre limite. Initialise un compteur \xe0 0 et utilise un while\nqui incr\xe9mente le compteur de deux \xe0 chaque it\xe9ration. Le compteur\ns'arr\xe8te quand le compteur \xe0 d\xe9pass\xe9 le nombre limite. Affichez la valeur\ndu compteur \xe0 la fin de chaque it\xe9ration de la boucle."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"Entrez une valeur limite: 13\n2\n4\n6\n8\n10\n12\n14\n")),(0,a.kt)("h2",{id:"compteurimpaire"},"compteurImpaire"),(0,a.kt)("p",null,"Utilise un while pour incr\xe9ment\xe9 un valeur de 1 jusqu'\xe0 10. Affiche\nseulement les valeurs impaires du compteur. Note : La modulo ",(0,a.kt)("inlineCode",{parentName:"p"},"%")," permet\nd'aider \xe0 d\xe9terminer si un nombre est impair."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"1\n3\n5\n7\n9\n")),(0,a.kt)("h2",{id:"compteurborne"},"compteurBorne"),(0,a.kt)("p",null,"Saisit un nombre minimum, un nombre maximum et un intervalle. Avec une\nboucle ",(0,a.kt)("inlineCode",{parentName:"p"},"while"),", affiche tous les nombres entre le nombre minimum et le\nnombre maximum en utilisant des sauts de l'intervalle."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"Entrez le minimum : 3\nEntrez le maximum : 13\nEntrez l'intervalle : 2\n3\n5\n7\n9\n11\n13\n")),(0,a.kt)("h2",{id:"compteurbornefor"},"compteurBorneFor"),(0,a.kt)("p",null,"Saisit un nombre minimum, un nombre maximum. Avec une\nboucle ",(0,a.kt)("inlineCode",{parentName:"p"},"for"),", affiche tous les nombres entre le nombre minimum et le\nnombre maximum."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"Entrez le minimum : 3\nEntrez le maximum : 7\n3\n4\n5\n6\n7\n")),(0,a.kt)("h2",{id:"diviseurnombre"},"diviseurNombre"),(0,a.kt)("p",null,"Saisit un nombre et affiche tous les diviseurs de ce nombre. Note : Le modulo ",(0,a.kt)("inlineCode",{parentName:"p"},"%"),"\npermet d'aider \xe0 trouver si un nombre est un diviseur d'un\nautre. Utilisez une boucle ",(0,a.kt)("inlineCode",{parentName:"p"},"for")," pour parcourir tous les nombres de 1 au nombre de\nla saisie et v\xe9rifiez chaque diviseur possible."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"Veuillez entrer un nombre entier: 14\nLes diviseurs du nombre 14 sont:\n1\n2\n7\n14\n")),(0,a.kt)("h2",{id:"carreetoile"},"carreEtoile"),(0,a.kt)("p",null,"Saisit la dimension d'un carr\xe9. Affiche un carr\xe9 d'\xe9toile (*) \xe0 l'\xe9cran\navec un nombre de ligne et un nombre de colonnes d\xe9termin\xe9 par la saisit."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"Quel est la dimension du carre : 5\n*****\n*****\n*****\n*****\n*****\n")),(0,a.kt)("h2",{id:"triangleetoile"},"triangleEtoile"),(0,a.kt)("p",null,"Saisit un nombre et affiche \xe0 l'\xe9cran un triangle rectangle compos\xe9\nd'etoiles dont la base et la hauteur correspondent au nombre saisit."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"Veuillez entrer la taille du triangle d'\xe9toiles: 5\n*\n**\n***\n****\n*****\n")),(0,a.kt)("h2",{id:"nombrepremier"},"nombrePremier"),(0,a.kt)("p",null,"Saisit un nombre et affiche si ce nombre est premier. Un nombre premier\n\xe0 seulement 1 et lui-m\xeame comme diviseur. L'affichage prendre la forme\n",(0,a.kt)("inlineCode",{parentName:"p"},"NOMBRE est premier")," ou ",(0,a.kt)("inlineCode",{parentName:"p"},"NOMBRE n'est pas premier.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"Le nombre a regarder : 17\n17 est premier.\n")),(0,a.kt)("h1",{id:"fonctions"},"Fonctions"),(0,a.kt)("p",null,"Pour chacunes des pr\xe9sentations suivantes, \xe9crivez la fonction qui correspond \xe0 la demande."),(0,a.kt)("h2",{id:"inverse_additif"},"inverse_additif"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"L'inverse additif d'un nombre.\nTrouve la valeur du nombre multipli\xe9 par -1.\n\nArgs:\n    nombre (float):  Le nombre \xe0 inverser.\nReturns:\n    float: L'inverse du nombre.\n")),(0,a.kt)("p",null,"Exemple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">> inverse_additif(45)\n    -45\n\n\n>> inverse_additif(-4.5)\n    4.5\n")),(0,a.kt)("h2",{id:"inverse_multiplicatif"},"inverse_multiplicatif"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"L'inverse multiplicatif.\n    Retourne la valeur \xe0 la puissance -1.\n\n    Args:\n      arg1 (float): La valeur dont on veut retourner l'inverse.\n    Returns:\n      float: L'inverse multiplicaitf de la valeur de d\xe9part.\n")),(0,a.kt)("p",null,"Exemple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">> inverse_multiplicatif(5)\n    0.2\n\n>> inverse_multiplicatif(0.25)\n    4\n\n")),(0,a.kt)("h2",{id:"compteur_entre_borne"},"compteur_entre_borne"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"La somme en entre un borne minimale et une borne maximale.\n\nEx : `debut + (debut+1) + ... + (fin-1) + fin`.\n\nArgs:\n    debut (float): La valeur de d\xe9part de la sommation \xe0 faire.\n    fin (float): La valeur de fin de la sommation \xe0 faire.\nReturns:\n    float: La somme du compteur entre les bornes donn\xe9es.\n")),(0,a.kt)("p",null,"Exemple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">> compteur_entre_borne(10, 13)\n    46\n\n>> compteur_entre_borne(0, 7)\n    28\n")),(0,a.kt)("h2",{id:"factoriel"},"factoriel"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Factoriel de n. Retourne la somme multiplicative de 1 \xe0 n.\n\nArgs:\n    n (float): La valeur pour laquelle on souhaite calculer le factoriel.\nReturns:\n    float: La somme multiplicative factoriel du nombre.\n")),(0,a.kt)("p",null,"Exemple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">> factoriel(5)\n    120\n")),(0,a.kt)("h2",{id:"saisit_entre_borne"},"saisit_entre_borne"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Saisi une valeur et recommence tant que la saisit n'est pas \xe0\nl'int\xe9rieur de bornes donn\xe9es.\n\nArgs:\n    minimum (float): La borne inf\xe9rieure de l'intervalle de saisi.\n    maximum (float): La borne sup\xe9rieure de l'intervalle de saisi.\nReturns:\n    float: La valeur finalement saisit entre les bornes.\n")),(0,a.kt)("p",null,"Exemple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">> saisit_entre_borne(5, 10)\n    Veuillez entrer une valeur : 3\n    La valeur doit se situer entre 5 et 10.\n    Veuillez entrer une valeur : 12\n    La valeur doit se situer entre 5 et 10.\n    Veuillez entrer une valeur : 5\n        5\n")),(0,a.kt)("h2",{id:"maximum_de_deux"},"maximum_de_deux"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Le nombre maximum entre deux nombres.\n\nArgs:\n    nb1 (float): Premi\xe8re valeur a comparer.\n    nb2 (float): Seconde valeur a comparer.\nReturns:\n    float: La valeur maximum entre les deux nombres.\n")),(0,a.kt)("p",null,"Exemple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">> maximum_de_deux(3, 5)\n        5\n\n>> maximum_de_deux(34, 34)\n        34\n")),(0,a.kt)("h2",{id:"maximum_de_trois"},"maximum_de_trois"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Le nombre maximum entre trois nombres.\n\nArgs:\n    nb1 (float): Premi\xe8re valeur a comparer.\n    nb2 (float): Seconde valeur a comparer.\n    nb3 (float): Troisi\xe8me valeur \xe0 comparer.\nReturns:\n    float: La valeur maximum entre les trois nombres.\n")),(0,a.kt)("p",null,"Exemple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">> maximum_de_trois(3, 5, 2)\n        5\n\n>> maximum_de_trois(34, 34, 34)\n        34\n\n\n>> maximum_de_trois(34, 5, 34)\n        34\n")),(0,a.kt)("h2",{id:"maximum_de_quatre"},"maximum_de_quatre"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Le nombre maximum entre quatre nombres.\n\nArgs:\n    nb1 (float): Premi\xe8re valeur a comparer.\n    nb2 (float): Seconde valeur a comparer.\n    nb3 (float): Troisi\xe8me valeur \xe0 comparer.\n    nb4 (float): Quatri\xe8me valeur \xe0 comparer.\nReturns:\n    float: La valeur maximum entre les quatre nombres.\n")),(0,a.kt)("p",null,"Exemple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">> maximum_de_quatre(3, 5, 2, 1)\n        5\n\n>> maximum_de_quatre(34, 34, 34, 34)\n        34\n\n>> maximum_de_quatre(34, 5, 34, 45)\n        45\n")),(0,a.kt)("h2",{id:"pgcd"},"pgcd"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Le plus grand commun diviseur entre deux nombre. Utilise\nl'algorithme suivant pour y arriver:\n\n    tant que b dif\xe9rent de 0\n        si a plus grand que b alors\n            a := a - b\n        sinon\n            b := b - a\n        fin si\n    fin tant que\n    r\xe9sultat := a\n\nLe signe `:=` est une assignation en algorithmie.\n\nArgs:\n    a (float): Premi\xe8re valeur.\n    b (float): Deuxi\xe8me valeur.\nReturns:\n    float: Plus grand diviseur des deux nombres.\n")),(0,a.kt)("p",null,"Exemple :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">> pgcd(12, 30)\n        6\n\n>> pgcd(8, 4)\n        4\n")),(0,a.kt)("h2",{id:"est_premier"},"est_premier"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"D\xe9termine si le nombre est premier.\nRetourne `true` si le nombre est premier, `false` autrement.\n\nArgs:\n    n (float): Le nombre \xe0 tester.\nReturns:\n    float: `true` si le nombre est premier.\n")),(0,a.kt)("p",null,"Exemple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">> est_premier(4)\n    False\n\n>> est_premier(7)\n    True\n")),(0,a.kt)("h2",{id:"affiche_n_nombre_premier"},"affiche_n_nombre_premier"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Affiche les n nombres premiers dans la fen\xeatre de commande.\n\nArgs:\n    n (float): Le nombre de nombre premiers \xe0 afficher.\n")),(0,a.kt)("p",null,"Exemple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">> affiche_n_nombre_premier(4)\n    1 ieme nombre premier : 2.\n    2 ieme nombre premier : 3.\n    3 ieme nombre premier : 5.\n    4 ieme nombre premier : 7.\n")),(0,a.kt)("h2",{id:"n_diviseur"},"n_diviseur"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Le nombre de diviseurs de n.\n\nArgs:\n    n (float): Le nombre \xe0 tester.\nReturns:\n    float: Le nombre de diviseurs du nombre.\n")),(0,a.kt)("p",null,"Exemple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">> n_diviseur(45)\n        6\n\n\n>> n_diviseur(8)\n        4\n")))}p.isMDXComponent=!0}}]);