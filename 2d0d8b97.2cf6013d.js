(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{124:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),u=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=u(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),s=u(n),d=a,m=s["".concat(l,".").concat(d)]||s[d]||p[d]||i;return n?r.a.createElement(m,c(c({ref:t},o),{},{components:n})):r.a.createElement(m,c({ref:t},o))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var o=2;o<i;o++)l[o]=n[o];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},72:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return u}));var a=n(2),r=n(6),i=(n(0),n(124)),l={title:"Programmation en Python",sidebar_label:"1 - Bases"},c={unversionedId:"db4/cours/cours1",id:"db4/cours/cours1",isDocsHomePage:!1,title:"Programmation en Python",description:"Programmation",source:"@site/docs/db4/cours/cours1.md",slug:"/db4/cours/cours1",permalink:"/site/docs/db4/cours/cours1",editUrl:"https://github.com/HugoCodeStar/site/edit/master/docs/db4/cours/cours1.md",version:"current",sidebar_label:"1 - Bases",sidebar:"DB4Sidebar",previous:{title:"Introduction",permalink:"/site/docs/db4"},next:{title:"Programmation en Python",permalink:"/site/docs/db4/cours/cours2"}},b=[{value:"Programmation",id:"programmation",children:[]},{value:"Programmation",id:"programmation-1",children:[]},{value:"Python REPL",id:"python-repl",children:[]},{value:"Scripts",id:"scripts",children:[]},{value:"Affichage avec la fonction <code>print</code>",id:"affichage-avec-la-fonction-print",children:[]},{value:"Les chaines de caract\xe8res",id:"les-chaines-de-caract\xe8res",children:[]},{value:"Commentaires",id:"commentaires",children:[]},{value:"Variables et instruction d&#39;assignation",id:"variables-et-instruction-dassignation",children:[]},{value:"Assignation et instruction",id:"assignation-et-instruction",children:[]},{value:"Identificateurs",id:"identificateurs",children:[]},{value:"Type de donn\xe9es",id:"type-de-donn\xe9es",children:[]},{value:"Saisie avec la fonction <code>input</code>",id:"saisie-avec-la-fonction-input",children:[]},{value:"Affichage d&#39;expression avec <code>print</code>",id:"affichage-dexpression-avec-print",children:[]},{value:"Caract\xe8re d&#39;\xe9chapement",id:"caract\xe8re-d\xe9chapement",children:[]},{value:"Terminaison de ligne avec <code>print</code>",id:"terminaison-de-ligne-avec-print",children:[]},{value:"S\xe9parateur d&#39;item avec <code>print</code>",id:"s\xe9parateur-ditem-avec-print",children:[]},{value:"Concat\xe9nation de chaine avec <code>+</code>",id:"concat\xe9nation-de-chaine-avec-",children:[]},{value:"Formatage des donn\xe9es avec <code>format</code>",id:"formatage-des-donn\xe9es-avec-format",children:[]},{value:"Op\xe9rations arithm\xe9tique",id:"op\xe9rations-arithm\xe9tique",children:[]},{value:"Op\xe9rateurs relationnels",id:"op\xe9rateurs-relationnels",children:[]},{value:"Options de la conditionnel <code>if</code>",id:"options-de-la-conditionnel-if",children:[]},{value:"Structure de contr\xf4le it\xe9rative <code>while</code>",id:"structure-de-contr\xf4le-it\xe9rative-while",children:[]},{value:"Structure de contr\xf4le it\xe9ratif <code>for</code>",id:"structure-de-contr\xf4le-it\xe9ratif-for",children:[]},{value:"Op\xe9rateurs logiques",id:"op\xe9rateurs-logiques",children:[]},{value:"Fonctions",id:"fonctions",children:[]},{value:"Pr\xe9sentation d&#39;une fonction minimale",id:"pr\xe9sentation-dune-fonction-minimale",children:[]},{value:"Param\xe8tres d&#39;entr\xe9es",id:"param\xe8tres-dentr\xe9es",children:[]},{value:"Retours",id:"retours",children:[]},{value:"Modules",id:"modules",children:[]},{value:"Modules fournis",id:"modules-fournis",children:[]}],o={rightToc:b};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"programmation"},"Programmation"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Instructions"),Object(i.b)("li",{parentName:"ul"},"M\xe9moire"),Object(i.b)("li",{parentName:"ul"},"Algorithme / Contr\xf4le de flux")),Object(i.b)("h2",{id:"programmation-1"},"Programmation"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Language du cours : Python 3"),Object(i.b)("li",{parentName:"ul"},"Environement de d\xe9velopment",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"repl.it"),Object(i.b)("li",{parentName:"ul"},"PyCharm"),Object(i.b)("li",{parentName:"ul"},"Anaconda / Jupyter - ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.anaconda.com/products/individual"}),"https://www.anaconda.com/products/individual")))),Object(i.b)("li",{parentName:"ul"},"Deux m\xe9thodes d'utilisation",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Interactive REPL (Read-Evaluate-Print-Loop)"),Object(i.b)("li",{parentName:"ul"},"Scripts")))),Object(i.b)("h2",{id:"python-repl"},"Python REPL"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Utile pour tester des concepts rapidement"),Object(i.b)("li",{parentName:"ul"},"Ne pas utiliser pour construire un programme"),Object(i.b)("li",{parentName:"ul"},"Affiche la r\xe9ponse de chaque \xe9valuation saisie et boucle pour un nouvelle saisie")),Object(i.b)("h2",{id:"scripts"},"Scripts"),Object(i.b)("p",null,"L'unit\xe9 de base d'un programme en python est le script."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Fichier texte"),Object(i.b)("li",{parentName:"ul"},"Extension .py"),Object(i.b)("li",{parentName:"ul"},"Contient les instructions de notre programme"),Object(i.b)("li",{parentName:"ul"},"Ex\xe9cut\xe9 par l'interpr\xe9teur de python de mani\xe8re s\xe9quentielle")),Object(i.b)("h2",{id:"affichage-avec-la-fonction-print"},"Affichage avec la fonction ",Object(i.b)("inlineCode",{parentName:"h2"},"print")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"L'affichage de texte utilise la fonction ",Object(i.b)("inlineCode",{parentName:"li"},"print")," pour pr\xe9senter une chaine de caract\xe8res dans la fen\xeatre de commande.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"print('Texte \xe0 afficher!')\n")),Object(i.b)("h2",{id:"les-chaines-de-caract\xe8res"},"Les chaines de caract\xe8res"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Les chaines de caract\xe8res (du texte lit\xe9ral) est d\xe9limit\xe9 par des guillement simple ",Object(i.b)("inlineCode",{parentName:"li"},"'")," ou double ",Object(i.b)("inlineCode",{parentName:"li"},'"'),"."),Object(i.b)("li",{parentName:"ul"},"Cette distinction permet de faire la diff\xe9rence entre les instructions et le texte \xe0 utiliser dans le programme."),Object(i.b)("li",{parentName:"ul"},"Deux symbole sont disponible pour facilit\xe9 l'utlisation de l'autre type de guillemet dans une chaine."),Object(i.b)("li",{parentName:"ul"},"Il est aussi possible d'utiliser les triples symboles pour d\xe9limit\xe9 une chaine.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'print(\'Texte \xe0 afficher!\')\nprint(\'Le "best" texte\')\nprint("Y\'en a pas de meilleur texte.")\nprint("""C\'est possible d\'avoir du texte avec les deux "quotes" dans une chaine.""")\nprint("""M\xeame\nsur plusieurs\nligne""")\n')),Object(i.b)("h2",{id:"commentaires"},"Commentaires"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Le hashtag ",Object(i.b)("inlineCode",{parentName:"li"},"#")," d\xe9bute une ligne de commentaire;"),Object(i.b)("li",{parentName:"ul"},"Le reste de la ligne apr\xe8s le ",Object(i.b)("inlineCode",{parentName:"li"},"#")," ne sera pas consid\xe9r\xe9 par python durant l'ex\xe9cution du code;"),Object(i.b)("li",{parentName:"ul"},"Une ligne vide sera aussi saut\xe9e par python;"),Object(i.b)("li",{parentName:"ul"},"Les commentaires sont primordiaux \xe0 la programmation;"),Object(i.b)("li",{parentName:"ul"},"Les commentaires sont utilis\xe9s en en-t\xeate de fichiers, fonctions et programme ainsi qu\u2019\xe0 l\u2019int\xe9rieur d\u2019un programme pour aider \xe0 comprendre l\u2019intention des instructions.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"print('Texte \xe0 afficher!')\n# Utilise le caract\xe8re sp\xe9cial \\n pour un saut de ligne\nprint('Une ligne\\net une autre')\nprint (3 + 6) # print peut aussi afficher le r\xe9sultat d'une expression\n")),Object(i.b)("h2",{id:"variables-et-instruction-dassignation"},"Variables et instruction d'assignation"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Une variable est la combinaison d\u2019un espace me\u0301moire re\u0301serve\u0301, un identificateur et une valeur;"),Object(i.b)("li",{parentName:"ul"},"L'assignation utilise l'\xe9galit\xe9 ",Object(i.b)("inlineCode",{parentName:"li"},"=")," pour lier la valeur \xe0 l'identificateur;")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"nomVariable = 10\nprint(nomVariable)\n")),Object(i.b)("h2",{id:"assignation-et-instruction"},"Assignation et instruction"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"L\u2019assignation se fait toujours d\u2019une ",Object(i.b)("strong",{parentName:"li"},"expression")," a\u0300 droite vers un identificateur a\u0300 gauche;"),Object(i.b)("li",{parentName:"ul"},"L'expression sera \xe9valu\xe9e avant d'\xeatre assign\xe9e dans la variable;")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"nomVariable = nomVariable + 5\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Le contenu d'une variable existante est \xe9cras\xe9 lors d'une assignation.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Une longue instruction peut \xeatre coup\xe9 sur une deuxi\xe8me ligne avec le caract\xe8re ",Object(i.b)("inlineCode",{parentName:"p"},"\\")))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"nomVariable = nomVariable + 5 + nomVariable + \\\n  nomVariable + nomVariable\n")),Object(i.b)("h2",{id:"identificateurs"},"Identificateurs"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Les identificateurs sont utilis\xe9s pour identifier les diff\xe9rents \xe9l\xe9ments que nous ajoutons \xe0 notre programme;"),Object(i.b)("li",{parentName:"ul"},"Les identificateurs sont les noms que l\u2019on donne \xe0 nos variables, scripts et fonctions;"),Object(i.b)("li",{parentName:"ul"},"Les caract\xe8res permis sont :",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Tout caract\xe8re alphanum\xe9rique;"),Object(i.b)("li",{parentName:"ul"},"Le tiret-bas ",Object(i.b)("inlineCode",{parentName:"li"},"_"),"."))),Object(i.b)("li",{parentName:"ul"},"Le premier caract\xe8re doit \xeatre alphab\xe9tique;"),Object(i.b)("li",{parentName:"ul"},"Le nom de la variable ne doit pas \xeatre un mot r\xe9serv\xe9 par la syntaxe de python;"),Object(i.b)("li",{parentName:"ul"},"Faites attention! Pour python, les majuscules et minuscules sont des caract\xe8res diff\xe9rents;"),Object(i.b)("li",{parentName:"ul"},"Par convention, ",Object(i.b)("inlineCode",{parentName:"li"},"camelCase"),".")),Object(i.b)("h2",{id:"type-de-donn\xe9es"},"Type de donn\xe9es"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Quatre types de donn\xe9es seront rencontr\xe9s g\xe9n\xe9ralement durant ce cours:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"int")," - entit\xe9 num\xe9rique enti\xe8re(ex: 3, -4);"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"float")," - entit\xe9e num\xe9rique flottante (3.542, -0.23);"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"str")," - entit\xe9 textuelle (ex: 'a', 'Bonjour!');",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Les chaines de caract\xe8res sont d\xe9limit\xe9es par des guillemets simples ou doubles."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"bool")," - valeur logique vraie (True) ou fausse (False).")))),Object(i.b)("h2",{id:"saisie-avec-la-fonction-input"},"Saisie avec la fonction ",Object(i.b)("inlineCode",{parentName:"h2"},"input")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Une saisie utilise la fonction ",Object(i.b)("inlineCode",{parentName:"li"},"input")," pour assigner l'entr\xe9e d'un utilisateur dans une variable."),Object(i.b)("li",{parentName:"ul"},"Puisque le retour sera toujours en ",Object(i.b)("inlineCode",{parentName:"li"},"str"),", il faut le convertir au besoin. "),Object(i.b)("li",{parentName:"ul"},"La fonction ",Object(i.b)("inlineCode",{parentName:"li"},"int")," ou ",Object(i.b)("inlineCode",{parentName:"li"},"float")," permet de convertir la chaine en entier ou en r\xe9el.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"## Saisie d'un nombre\n## Doit convertir la valeur\nsaisi = int(input('Texte \xe0 afficher \xe0 la saisie: '))\n\n## Saisie d'une chaine de caract\xe8res (texte)\nsaisiChaine = input('Texte \xe0 afficher: ')\n")),Object(i.b)("h2",{id:"affichage-dexpression-avec-print"},"Affichage d'expression avec ",Object(i.b)("inlineCode",{parentName:"h2"},"print")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"print")," a la possibilit\xe9 d'afficher l'\xe9valuation d'une expression;"),Object(i.b)("li",{parentName:"ul"},"Il est possible de d\xe9couper sur plusieurs ligne l'utilsation du print.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"x = 3;\nchaine = 'allo';\nprint('Chiffre: ', x)\nprint('Chaine: ', chaine)\nprint('Chiffre' , x, \n  'et chaine', chaine)\n")),Object(i.b)("h2",{id:"caract\xe8re-d\xe9chapement"},"Caract\xe8re d'\xe9chapement"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Les caract\xe8res d'\xe9chapements permetent d'ins\xe9r\xe9 des \xe9l\xe9ments non-textuelles dans un affichage de la fonction print.")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Caract\xe8re"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"\\n")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Saut de ligne")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"\\t")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Saut de tabulation horizontale")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"\\'")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Affiche un guillemet simple")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},'\\"')),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Affiche un guillemet double")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"\\\\")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Affiche un backslash")))),Object(i.b)("h2",{id:"terminaison-de-ligne-avec-print"},"Terminaison de ligne avec ",Object(i.b)("inlineCode",{parentName:"h2"},"print")),Object(i.b)("p",null,"Il est possible de supprimer le saut de ligne du print avec le param\xe8tre ",Object(i.b)("inlineCode",{parentName:"p"},"end")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"print('One', end=' ') \nprint('Two', end=' ') \nprint('Three')\n# Affiche 'OneTwoThree'\n")),Object(i.b)("h2",{id:"s\xe9parateur-ditem-avec-print"},"S\xe9parateur d'item avec ",Object(i.b)("inlineCode",{parentName:"h2"},"print")),Object(i.b)("p",null,"Il est aussi possible de change le s\xe9parateur d'items qui est l'espace par d\xe9fault."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"# Affiche 'One Two Three'. S\xe9parateur d'espace.\nprint('One', 'Two', 'Three') \n\n# Affiche 'OneTwoThree'. S\xe9prateur vide.\nprint('One', 'Two', 'Three', sep='') \n\n# Affiche 'One,Two,Three'. S\xe9parateur virgule.\nprint('One', 'Two', 'Three', sep=',')\n")),Object(i.b)("h2",{id:"concat\xe9nation-de-chaine-avec-"},"Concat\xe9nation de chaine avec ",Object(i.b)("inlineCode",{parentName:"h2"},"+")),Object(i.b)("p",null,"Le ",Object(i.b)("inlineCode",{parentName:"p"},"+")," peut \xeatre utilis\xe9 entre deux chaines pour faire la concat\xe9nation (coll\xe9) entre les deux chaines."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"# Affiche 'Ceci est un test.'\nprint('Ceci est ' + 'un test.')\n")),Object(i.b)("h2",{id:"formatage-des-donn\xe9es-avec-format"},"Formatage des donn\xe9es avec ",Object(i.b)("inlineCode",{parentName:"h2"},"format")),Object(i.b)("p",null,"La fonction ",Object(i.b)("inlineCode",{parentName:"p"},"format")," permet de faire le formatage de valeur num\xe9rique pour un affichage."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"format")," re\xe7oit la valeur \xe0 formater et un ",Object(i.b)("em",{parentName:"p"},"sp\xe9cificateur de formatage"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"# Affiche '123.45'\n# Le nombre \xe0 formater est 123.45678\n# Le sp\xe9cificateur de formatage est '.2f'\n# Le .2 indique la pr\xe9cision\n# Le f indique que le nombre est un float (point-flottant)\nprint(format(123.45678, '.2f'))\n\n# Affiche '1.234568e+04'\nprint(format(12345.6789, 'e'))\n# Affiche '1.23e+04'\nprint(format(12345.6789, '.2e'))\n\n# Affiche '50.000000%'\nprint(format(0.5, '%'))\n# Affiche '50%'\nprint(format(0.5, '.0%'))\n")),Object(i.b)("h2",{id:"op\xe9rations-arithm\xe9tique"},"Op\xe9rations arithm\xe9tique"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Symbole"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Op\xe9ration"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"+")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Addition"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Additionne deux nombres")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"-")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Soustraction"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Soustrait deux nombres")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"*")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Multiplication"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Multiplication de deux nombres")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"/")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Division"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Division de deux nombres")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"//")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Division enti\xe8re"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Division de deux nombres, garde seulement la partie enti\xe8re")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"%")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Modulo"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Trouve le restant d'une division")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"**")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Puissance"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Met un nombre \xe0 une puissance")))),Object(i.b)("h2",{id:"op\xe9rateurs-relationnels"},"Op\xe9rateurs relationnels"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Les op\xe9rateurs relationnels permettent de faire des comparaisons entre deux expressions;"),Object(i.b)("li",{parentName:"ul"},"Les op\xe9rateurs donnent toujours un r\xe9sultat logique bool\xe9en(vrai ou faux);"),Object(i.b)("li",{parentName:"ul"},"Les op\xe9rateurs sont :",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"<"),", ",Object(i.b)("inlineCode",{parentName:"li"},"<="),", ",Object(i.b)("inlineCode",{parentName:"li"},">"),", ",Object(i.b)("inlineCode",{parentName:"li"},">="),", ",Object(i.b)("inlineCode",{parentName:"li"},"==")," (\xe9galit\xe9), ",Object(i.b)("inlineCode",{parentName:"li"},"!=")," (diff\xe9rent de)."))),Object(i.b)("li",{parentName:"ul"},"Il est \xe0 noter ici que l'op\xe9rateur d'\xe9galit\xe9 utilise ",Object(i.b)("inlineCode",{parentName:"li"},"==")," car l'assignation utilise d\xe9j\xe0 le simple ",Object(i.b)("inlineCode",{parentName:"li"},"="),".")),Object(i.b)("h2",{id:"options-de-la-conditionnel-if"},"Options de la conditionnel ",Object(i.b)("inlineCode",{parentName:"h2"},"if")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Plusieurs options sont disponibles avec le if;")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"if expression logique:\n    instructions\nelif expression logique:\n    instructions\nelse:\n    instructions\n\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Seul un des blocs d\u2019instructions (d\xe9cision) du ",Object(i.b)("inlineCode",{parentName:"li"},"if")," est ex\xe9cut\xe9"),Object(i.b)("li",{parentName:"ul"},"Le ",Object(i.b)("inlineCode",{parentName:"li"},"elif")," et le ",Object(i.b)("inlineCode",{parentName:"li"},"else")," sont facultatifs"),Object(i.b)("li",{parentName:"ul"},"Le ",Object(i.b)("inlineCode",{parentName:"li"},"elif")," peut \xeatre r\xe9p\xe9t\xe9 \xe0 plusieurs reprises avec diff\xe9rentes expressions")),Object(i.b)("h2",{id:"structure-de-contr\xf4le-it\xe9rative-while"},"Structure de contr\xf4le it\xe9rative ",Object(i.b)("inlineCode",{parentName:"h2"},"while")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"La boucle ",Object(i.b)("inlineCode",{parentName:"li"},"while")," r\xe9p\xe8te les instructions jusqu\u2019\xe0 ce que la condition soit fausse\u2009;")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"while condition:\n    instructions\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Le ",Object(i.b)("inlineCode",{parentName:"li"},"while")," est habituellement utilis\xe9 quand on ne connait pas le nombre d\u2019it\xe9rations \xe0 faire.")),Object(i.b)("h2",{id:"structure-de-contr\xf4le-it\xe9ratif-for"},"Structure de contr\xf4le it\xe9ratif ",Object(i.b)("inlineCode",{parentName:"h2"},"for")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Lorsque le nombre d\u2019it\xe9rations est connu, la boucle ",Object(i.b)("inlineCode",{parentName:"li"},"for")," sera utilis\xe9e\u2009;"),Object(i.b)("li",{parentName:"ul"},"La boucle ",Object(i.b)("inlineCode",{parentName:"li"},"for")," inclut un compteur qui est configur\xe9 au d\xe9but de la boucle\u2009;")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"for x in liste:\n    instructions\n\nfor x in [4, 56, 3]:\n    intructions\n\nfor x in range(10):\n    instructions\n")),Object(i.b)("h2",{id:"op\xe9rateurs-logiques"},"Op\xe9rateurs logiques"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Les op\xe9rateurs logiques op\xe8rent sur des valeurs logiques et retournent des valeurs logiques\u2009;",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"La conjonction ET ",Object(i.b)("inlineCode",{parentName:"li"},"and")," ;"),Object(i.b)("li",{parentName:"ul"},"La disjonction OU\u2009",Object(i.b)("inlineCode",{parentName:"li"},"or")," ;"),Object(i.b)("li",{parentName:"ul"},"La n\xe9gation NON ",Object(i.b)("inlineCode",{parentName:"li"},"not"),".")))),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"th"},"A")),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"th"},"B")),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),Object(i.b)("inlineCode",{parentName:"th"},"A and B")),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),Object(i.b)("inlineCode",{parentName:"th"},"A or B")))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"False"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"False"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"False"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"False")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"False"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"True"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"False"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"True")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"True"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"False"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"False"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"True")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"True"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"True"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"True"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"True")))),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"th"},"A")),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),Object(i.b)("inlineCode",{parentName:"th"},"not A")))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"False"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"True")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"True"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"False")))),Object(i.b)("h2",{id:"fonctions"},"Fonctions"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Les fonctions sont des s\xe9ries d'instructions contenues dans un ensemble pouvant \xeatre facilement re-utilis\xe9. Par convention, la fonction doit faire une t\xe2che simple et pr\xe9cise;"),Object(i.b)("li",{parentName:"ul"},"Contrairement aux scripts, les fonctions n'auront pas de saisit avec ",Object(i.b)("inlineCode",{parentName:"li"},"input")," et pas d'affichage avec ",Object(i.b)("inlineCode",{parentName:"li"},"print"),". Cela \xe0 moins d'\xeatre express\xe9ment demand\xe9."),Object(i.b)("li",{parentName:"ul"},"Les fonctions peuvent demander des param\xe8tres (ou arguments) d'entr\xe9es. Ce sont des informations pr\xe9alables aux calculs de la fonction;"),Object(i.b)("li",{parentName:"ul"},"Les fonctions peuvent \xe9mettre des r\xe9ponses que l'on appelle retour.")),Object(i.b)("h2",{id:"pr\xe9sentation-dune-fonction-minimale"},"Pr\xe9sentation d'une fonction minimale"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"def nomFonction():\n    instructions\n\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Une fonction est au d\xe9but du fichier;"),Object(i.b)("li",{parentName:"ul"},"La fonction peut ensuite \xeatre appel\xe9e par son nom d'autres programmes.")),Object(i.b)("h2",{id:"param\xe8tres-dentr\xe9es"},"Param\xe8tres d'entr\xe9es"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Une fonction peut demander des param\xe8tres d'entr\xe9es;"),Object(i.b)("li",{parentName:"ul"},"Ceux-ci seront dans une liste apr\xe8s le nom de la fonction entre parenth\xe8ses d\xe9limit\xe9e par une virgule;"),Object(i.b)("li",{parentName:"ul"},"Les param\xe8tres d'entr\xe9es seront fournis par l'appelant de la fonction et peuvent donc \xeatre utilis\xe9s \xe0 l'int\xe9rieur des instructions de la fonction sans \xeatre assign\xe9s pr\xe9alablement.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"def fcnAvecIn(var1, var2):\n    print(var1 * var2)\n\n")),Object(i.b)("h2",{id:"retours"},"Retours"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"La fonction peut retourner un r\xe9sultat qui sera utilisable par l'appelant de la fonction."),Object(i.b)("li",{parentName:"ul"},"Le mot-cl\xe9 ",Object(i.b)("inlineCode",{parentName:"li"},"return")," est utilis\xe9 quand l'expression de retour est pr\xeate \xe0 \xeatre renvoy\xe9e."),Object(i.b)("li",{parentName:"ul"},"Une fonction qui ne contient pas de retour est aussi nomm\xe9e une proc\xe9dure.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"def fcnAvecRetour():\n    instructions\n    return expression\n")),Object(i.b)("h2",{id:"modules"},"Modules"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Plusieurs fichiers de python avec diff\xe9rentes fonctions peuvent interagir entre eux. Chaque fichier cr\xe9\xe9 est consid\xe9r\xe9 comme \xe9tant un module qu'on peut importer dans pour nos programmes;"),Object(i.b)("li",{parentName:"ul"},"La commande ",Object(i.b)("inlineCode",{parentName:"li"},"import")," permet d\u2019importer les fonctions d'un autre fichier;"),Object(i.b)("li",{parentName:"ul"},"Le nom du module est le nom du fichier sans son extension ",Object(i.b)("inlineCode",{parentName:"li"},".py"),";"),Object(i.b)("li",{parentName:"ul"},"L'utilisation des fonctions du module importer devra \xeatre pr\xe9c\xe9d\xe9e du nom du module et un point.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"import mon_module # Du fichier mon_module.py\n\n# Appel de la fonction du module import\xe9.\nmon_module.ma_fonction(4, 5)\n")),Object(i.b)("h2",{id:"modules-fournis"},"Modules fournis"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Plusieurs modules sont fournis et nous verrons qu'il existe un tr\xe8s grand \xe9cosyst\xe8me de module pouvant nous faciliter la cr\xe9ation de nos programmes."),Object(i.b)("li",{parentName:"ul"},"Par exemple, le module ",Object(i.b)("inlineCode",{parentName:"li"},"math")," nous donne plusieurs fonctions math\xe9matiques communes."),Object(i.b)("li",{parentName:"ul"},"Pour savoir lesquelles et leurs utilisations, il faut consulter leur documentation;",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.python.org/3/library/math.html"}),"https://docs.python.org/3/library/math.html"))))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"import math\n\nreponse = math.sqrt(45)\n")))}u.isMDXComponent=!0}}]);