(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{103:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return u}));var a=n(2),r=n(6),i=(n(0),n(126)),l={title:"Sets, dictionnaires et format de fichiers de donn\xe9es",sidebar_label:"7 - Set, dictionnaire, csv et JSON"},c={unversionedId:"inf1256/cours/cours7",id:"inf1256/cours/cours7",isDocsHomePage:!1,title:"Sets, dictionnaires et format de fichiers de donn\xe9es",description:"Set",source:"@site/docs/inf1256/cours/cours7.md",slug:"/inf1256/cours/cours7",permalink:"/site/docs/inf1256/cours/cours7",editUrl:"https://github.com/HugoCodeStar/site/edit/master/docs/inf1256/cours/cours7.md",version:"current",sidebar_label:"7 - Set, dictionnaire, csv et JSON",sidebar:"INF1256Sidebar",previous:{title:"Chaines de caract\xe8res",permalink:"/site/docs/inf1256/cours/cours6"},next:{title:"Liste en compr\xe9hension, tests unitaires, environnement de d\xe9veloppement",permalink:"/site/docs/inf1256/cours/cours8"}},o=[{value:"Set",id:"set",children:[]},{value:"Cr\xe9ation d&#39;un set",id:"cr\xe9ation-dun-set",children:[]},{value:"Acc\xe8s au set",id:"acc\xe8s-au-set",children:[]},{value:"Soustraction au set",id:"soustraction-au-set",children:[]},{value:"Trouv\xe9 de \xe9l\xe9ments dans un set",id:"trouv\xe9-de-\xe9l\xe9ments-dans-un-set",children:[]},{value:"Op\xe9ration sur les sets",id:"op\xe9ration-sur-les-sets",children:[]},{value:"Dictionnaire",id:"dictionnaire",children:[]},{value:"Acc\xe8s au dictionnaire",id:"acc\xe8s-au-dictionnaire",children:[]},{value:"Modification d&#39;un dictionnaire",id:"modification-dun-dictionnaire",children:[]},{value:"Les m\xe9thodes des dictionnaires",id:"les-m\xe9thodes-des-dictionnaires",children:[]},{value:"Les formats des fichiers de donn\xe9es",id:"les-formats-des-fichiers-de-donn\xe9es",children:[]},{value:"CSV - Comma-separated values",id:"csv---comma-separated-values",children:[]},{value:"Module csv",id:"module-csv",children:[]},{value:"JSON - JavaScript Object Notation",id:"json---javascript-object-notation",children:[]},{value:"Module json",id:"module-json",children:[]},{value:"Exemple JSON",id:"exemple-json",children:[]},{value:"Module json",id:"module-json-1",children:[]}],s={rightToc:o};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"set"},"Set"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Un ",Object(i.b)("inlineCode",{parentName:"li"},"set")," est une collection, semblable \xe0 une liste, mais avec la distinction que tous les \xe9l\xe9ments doivent \xeatre unique."),Object(i.b)("li",{parentName:"ul"},"L'ordre des \xe9l\xe9ments est aussi laiss\xe9 \xe0 l'impl\xe9mentation. Il n'existe pas d'indice pouvant identifier l'emplacement de l'\xe9l\xe9ment dans la collection.")),Object(i.b)("h2",{id:"cr\xe9ation-dun-set"},"Cr\xe9ation d'un set"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Le set peut \xeatre cr\xe9\xe9 vide avec un constructeur ",Object(i.b)("inlineCode",{parentName:"li"},"set()")," ou \xe0 partir d'une autre collection existante.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"mon_set = set()\nautre_set = set([4, 65, 34, 3, 4]) # Le 4 s'y retrouvera qu'une fois.\nencore_set = set('allo') # Le 'l' ne sera pas en 2 copies.\ndernier_set = set(['un', 'deux', 'trois']) # Contient chaque mot.\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Il est aussi possible d'utiliser les accolades pour construire un ",Object(i.b)("inlineCode",{parentName:"li"},"set"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"curly_set = {'allo', 'salut', 'allo', 'bonjour'}\nprint(curly_set) # Affiche {'salut', 'allo', 'bonjour'}\n")),Object(i.b)("h2",{id:"acc\xe8s-au-set"},"Acc\xe8s au set"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"La taille du set peut \xeatre connue avec ",Object(i.b)("inlineCode",{parentName:"li"},"len"),"."),Object(i.b)("li",{parentName:"ul"},"On ajoute un \xe9l\xe9ment avec la m\xe9thode ",Object(i.b)("inlineCode",{parentName:"li"},"add"),"."),Object(i.b)("li",{parentName:"ul"},"On ajoute plusieurs \xe9l\xe9ments avec la m\xe9thode ",Object(i.b)("inlineCode",{parentName:"li"},"update"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"mon_set = set()\nmon_set.add(3)\nmon_set.add(4)\nmon_set.update([4, 5, 6])\n\nprint(len(mon_set)) # Affiche 4\n")),Object(i.b)("h2",{id:"soustraction-au-set"},"Soustraction au set"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Les m\xe9thodes ",Object(i.b)("inlineCode",{parentName:"li"},"remove")," et ",Object(i.b)("inlineCode",{parentName:"li"},"discard")," enl\xe8vent des \xe9l\xe9ments du set."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"remove")," soul\xe8ve un ",Object(i.b)("inlineCode",{parentName:"li"},"KeyError")," si l'\xe9l\xe9ment n'est pas trouv\xe9."),Object(i.b)("li",{parentName:"ul"},"La m\xe9thode ",Object(i.b)("inlineCode",{parentName:"li"},"clear")," permet de vider le set.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"mon_set = set([4, 5, 6, 7])\nmon_set.remove(4)\n\nmon_set.remove(10) # KeyError\nmon_set.discard(10)\n")),Object(i.b)("h2",{id:"trouv\xe9-de-\xe9l\xe9ments-dans-un-set"},"Trouv\xe9 de \xe9l\xe9ments dans un set"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"L'op\xe9rateur ",Object(i.b)("inlineCode",{parentName:"li"},"in")," et ",Object(i.b)("inlineCode",{parentName:"li"},"not in")," permet de faire la d\xe9tection d'un \xe9l\xe9ment dans un set.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'mon_set = set([1, 2, 3])\n\nif 2 in mon_set:\n    print("Trouv\xe9!")\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"La boucle ",Object(i.b)("inlineCode",{parentName:"li"},"for")," peut it\xe9rer sur un set. L'ordre des \xe9l\xe9ments ne peut pas \xeatre connu d'avance.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"curly_set = {'allo', 'salut', 'allo', 'bonjour'}\n\nfor item in curly_set:\n  print(item)\n")),Object(i.b)("h2",{id:"op\xe9ration-sur-les-sets"},"Op\xe9ration sur les sets"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"On trouve l'union de deux sets avec la m\xe9thode ",Object(i.b)("inlineCode",{parentName:"li"},"union"),"."),Object(i.b)("li",{parentName:"ul"},"On trouve l'intersection de deux sets avec la m\xe9thode ",Object(i.b)("inlineCode",{parentName:"li"},"intersection"),"."),Object(i.b)("li",{parentName:"ul"},"On trouve la diff\xe9rence de deux sets avec la m\xe9thode ",Object(i.b)("inlineCode",{parentName:"li"},"difference"),"."),Object(i.b)("li",{parentName:"ul"},"On trouve la diff\xe9rence sym\xe9trique (ceux exclusifs \xe0 chaque set) avec la m\xe9thode ",Object(i.b)("inlineCode",{parentName:"li"},"symmetric_difference"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"set1 = set([1, 2, 3])\nset2 = set([3, 4, 5])\nset3 = set1.union(set2)\n\nprint(len(set3)) # Affiche 5\n")),Object(i.b)("h2",{id:"dictionnaire"},"Dictionnaire"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Le dictionnaire est une autre collection."),Object(i.b)("li",{parentName:"ul"},"Chaque \xe9l\xe9ment contient deux parties : une cl\xe9 et une valeur (key-value pair)."),Object(i.b)("li",{parentName:"ul"},"La cl\xe9 est utilis\xe9e pour rep\xe9rer l'\xe9l\xe9ment dans la collection."),Object(i.b)("li",{parentName:"ul"},"Les cl\xe9s sont uniques."),Object(i.b)("li",{parentName:"ul"},"Le dictionnaire repr\xe9sente ses key-value avec un ",Object(i.b)("inlineCode",{parentName:"li"},":")," entre chacun et les inclus dans des accollades ",Object(i.b)("inlineCode",{parentName:"li"},"{}"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"telephone = {'Marie':'444-1111', 'Bob':'444-2222', 'Alice':'444-3333'}\n")),Object(i.b)("h2",{id:"acc\xe8s-au-dictionnaire"},"Acc\xe8s au dictionnaire"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Les \xe9l\xe9ments du dictionnaire sont acc\xe9der avec les cl\xe9s entre crochets (comme une liste)."),Object(i.b)("li",{parentName:"ul"},"Comme les set, les op\xe9rateurs ",Object(i.b)("inlineCode",{parentName:"li"},"in")," et ",Object(i.b)("inlineCode",{parentName:"li"},"not in")," permettent de d\xe9terminer si une cl\xe9 existe."),Object(i.b)("li",{parentName:"ul"},"La fonction ",Object(i.b)("inlineCode",{parentName:"li"},"len")," permet de d\xe9terminer le nombre d'\xe9l\xe9ments")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"telephone = {'Marie':'444-1111', 'Bob':'444-2222', 'Alice':'444-3333'}\nif 'Bob' in telephone:\n    print(telephone['Bob']) # Affiche '444-2222'\n\nprint(len(telephone)) # Affiche 4\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"La boucle ",Object(i.b)("inlineCode",{parentName:"li"},"for")," permet d'avoir les ",Object(i.b)("inlineCode",{parentName:"li"},"key")," du dictionnaire")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"telephone = {'Marie':'444-1111', 'Bob':'444-2222', 'Alice':'444-3333'}\n\nfor item in telephone:\n  print(item) # Affiche en ordre Marie, Bob, Alice\n  print(telephone[item]) # Affiche les num\xe9ro 444-1111, 444-2222, 444-3333\n")),Object(i.b)("h2",{id:"modification-dun-dictionnaire"},"Modification d'un dictionnaire"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"On ajoute dans un dictionnaire avec l'assignation d'une nouvelle cl\xe9."),Object(i.b)("li",{parentName:"ul"},"On d\xe9truit un \xe9l\xe9ment avec le mot cl\xe9 ",Object(i.b)("inlineCode",{parentName:"li"},"del"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"telephone = {'Marie':'444-1111', 'Bob':'444-2222', 'Alice':'444-3333'}\ntelehphone['Corinne'] = '444-1111' # M\xeame valeur que Marie et c'est ok\n\ndel telephone['Bob']\n")),Object(i.b)("h2",{id:"les-m\xe9thodes-des-dictionnaires"},"Les m\xe9thodes des dictionnaires"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Nom"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"clear()"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Vide le dictionnaire.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"get(key)"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Retourne la valeur associ\xe9e avec la cl\xe9. Ne g\xe9n\xe8re pas d'erreur.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"items()"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Renvoie une s\xe9quence de tuple de (key, value)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"keys()"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Retourne toutes les cl\xe9s.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"pop(key)"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Retourne la valeur associ\xe9e avec la cl\xe9. Enl\xe8ve l'\xe9l\xe9ment du dictionnaire.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"popitem()"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Retourne un tuple (key, value) al\xe9atoire et l'enl\xe8ve du dictionnaire.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"values()"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Retourne les valeurs des \xe9l\xe9ments.")))),Object(i.b)("h2",{id:"les-formats-des-fichiers-de-donn\xe9es"},"Les formats des fichiers de donn\xe9es"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Dans le domaine des sciences, deux fichiers de donn\xe9es sont populaires:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"CSV - Comma-separated values"),Object(i.b)("li",{parentName:"ul"},"JSON - JavaScript Object Notation"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Python nous fournit des modules pour travailler avec ses deux types de fichiers."))),Object(i.b)("h2",{id:"csv---comma-separated-values"},"CSV - Comma-separated values"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Le CSV est un fichier texte qui d\xe9limite ses informations comme un tableur."),Object(i.b)("li",{parentName:"ul"},"Chaque ligne de texte est une entr\xe9e."),Object(i.b)("li",{parentName:"ul"},'Chaque ligne contient des "colonne" qui sont s\xe9par\xe9s par des virgules.')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"Name,Email,Phone Number,Address\nBob Smith,bob@example.com,123-456-7890,123 Fake Street\nMike Jones,mike@example.com,098-765-4321,321 Fake Avenue\n")),Object(i.b)("h2",{id:"module-csv"},"Module csv"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Le module csv contient la fonctionnalit\xe9 qui permet de lire un fichier csv et le convertir en collection de Python.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"import csv\n\n# Avec reader on convertie en liste\nwith open('address.csv', newline='') as csvfile:\n    reader = csv.reader(csvfile)\n    for row in reader:\n        print(row)\n\n# Avec DictReader on convetie en dictionnaire\nwith open('address.csv', newline='') as csvfile:\n    reader = csv.DictReader(csvfile)\n    for row in reader:\n        print(row)\n")),Object(i.b)("h2",{id:"json---javascript-object-notation"},"JSON - JavaScript Object Notation"),Object(i.b)("h2",{id:"module-json"},"Module json"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.json.org/"}),"https://www.json.org/")),Object(i.b)("li",{parentName:"ul"},"Un document qui permet de formater des collections en fichier texte pour transmission facile."),Object(i.b)("li",{parentName:"ul"},"N'a pas de lien fort avec JavaScript (malgr\xe9 son nom)."),Object(i.b)("li",{parentName:"ul"},"Permets de facilement imbriquer des informations.")),Object(i.b)("h2",{id:"exemple-json"},"Exemple JSON"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "firstName": "John",\n  "lastName": "Smith",\n  "isAlive": true,\n  "age": 27,\n  "address": {\n    "streetAddress": "21 2nd Street",\n    "city": "New York",\n    "state": "NY",\n    "postalCode": "10021-3100"\n  },\n  "phoneNumbers": ["212 555-1234" ,"646 555-4567"],\n  "children": [],\n  "spouse": null\n}\n')),Object(i.b)("h2",{id:"module-json-1"},"Module json"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Le module json nous permet de lire un fichier ou une chaine json et la convertie en objet Python."),Object(i.b)("li",{parentName:"ul"},"La fonction ",Object(i.b)("inlineCode",{parentName:"li"},"load")," permet de convertir un fichier ouvert."),Object(i.b)("li",{parentName:"ul"},"La fonction ",Object(i.b)("inlineCode",{parentName:"li"},"loads")," permet de convertir une chaine de caract\xe8re d\xe9crivant un objet JSON.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'with open(\'iris.json\', newline=\'\') as jsonfile:\n    reader = json.load(jsonfile)\n    for row in reader:\n        print(row)\n\n# json.loads permet de parcourir une chaine\ninfo = json.loads(\'{"name":"mkyong.com","messages":["msg 1","msg 2","msg 3"],"age":100}\')\nprint(info)\n')))}u.isMDXComponent=!0},126:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),b=u(n),p=a,m=b["".concat(l,".").concat(p)]||b[p]||d[p]||i;return n?r.a.createElement(m,c(c({ref:t},s),{},{components:n})):r.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=p;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var s=2;s<i;s++)l[s]=n[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);