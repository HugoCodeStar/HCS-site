(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{113:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var i=n(0),r=n.n(i);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),u=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),d=i,m=p["".concat(s,".").concat(d)]||p[d]||b[d]||a;return n?r.a.createElement(m,l(l({ref:t},c),{},{components:n})):r.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var c=2;c<a;c++)s[c]=n[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},57:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return u}));var i=n(2),r=n(6),a=(n(0),n(113)),s={title:"Programmation orient\xe9e-objet",sidebar_label:"9 - POO"},l={unversionedId:"inf1256/cours/cours9",id:"inf1256/cours/cours9",isDocsHomePage:!1,title:"Programmation orient\xe9e-objet",description:"Programmation orient\xe9e-objet",source:"@site/docs/inf1256/cours/cours9.md",slug:"/inf1256/cours/cours9",permalink:"/site/docs/inf1256/cours/cours9",editUrl:"https://github.com/HugoCodeStar/site/edit/master/docs/inf1256/cours/cours9.md",version:"current",sidebar_label:"9 - POO",sidebar:"INF1256Sidebar",previous:{title:"Liste en compr\xe9hension, tests unitaires, environnement de d\xe9veloppement",permalink:"/site/docs/inf1256/cours/cours8"},next:{title:"Programmes \xe0 faire de l'atelier 1",permalink:"/site/docs/inf1256/atelier/atelier1"}},o=[{value:"Programmation orient\xe9e-objet",id:"programmation-orient\xe9e-objet",children:[]},{value:"Les objets",id:"les-objets",children:[]},{value:"Classes",id:"classes",children:[]},{value:"Exemple d&#39;une classe",id:"exemple-dune-classe",children:[]},{value:"M\xe9thodes d&#39;une classe",id:"m\xe9thodes-dune-classe",children:[]},{value:"Cr\xe9ation d&#39;objets \xe0 partir d&#39;une classe",id:"cr\xe9ation-dobjets-\xe0-partir-dune-classe",children:[]},{value:"Attributs priv\xe9s",id:"attributs-priv\xe9s",children:[]},{value:"Multiple instance",id:"multiple-instance",children:[]},{value:"Accesseurs et mutateurs",id:"accesseurs-et-mutateurs",children:[]}],c={rightToc:o};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"programmation-orient\xe9e-objet"},"Programmation orient\xe9e-objet"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"La programmation orient\xe9e-objet (POO) est un paradigme de programmation qui permet de conceptualiser des probl\xe8mes complexes d'une mani\xe8re plus humaine."),Object(a.b)("li",{parentName:"ul"},"On consid\xe8re les \xe9l\xe9ments du probl\xe8me comme \xe9tant des entit\xe9s distinctes (des objets) qui pourront \xe9voluer face \xe0 la probl\xe9matique."),Object(a.b)("li",{parentName:"ul"},"Cela vient en contraste \xe0 la programmation proc\xe9durale qui se base sur le flux s\xe9quentiel des instructions et de l'utilisation de fonctions avec des entr\xe9es et sorties bien d\xe9finies.")),Object(a.b)("h2",{id:"les-objets"},"Les objets"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Un objet repr\xe9sente deux informations :",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"Les donn\xe9es (attributs, variables)"),Object(a.b)("li",{parentName:"ul"},"Les comportements (m\xe9thodes, fonctions)")))),Object(a.b)("p",null,"Par exemple, une alarme aura les informations suivantes:"),Object(a.b)("p",null,"Attributs:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"current_second (0\u201359)"),Object(a.b)("li",{parentName:"ul"},"current_minute (0\u201359)"),Object(a.b)("li",{parentName:"ul"},"current_hour (1\u201312)"),Object(a.b)("li",{parentName:"ul"},"alarm_time (heure et minute valide)"),Object(a.b)("li",{parentName:"ul"},"alarm_is_set (True, False)")),Object(a.b)("p",null,"M\xe9thodes:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"set_time"),Object(a.b)("li",{parentName:"ul"},"set_alarm_time "),Object(a.b)("li",{parentName:"ul"},"set_alarm_on"),Object(a.b)("li",{parentName:"ul"},"set_alarm_off")),Object(a.b)("h2",{id:"classes"},"Classes"),Object(a.b)("p",null,"Une classe est un gabarit pour la construction d'objet. On peut aussi le voir comme une recette."),Object(a.b)("p",null,"La classe est le code qui pourra d\xe9crire les diff\xe9rents objets qui sont cr\xe9\xe9s \xe0 partir de la classe. Les objets cr\xe9\xe9s \xe0 partir d'une classe sont nomm\xe9s les instances de la classe."),Object(a.b)("h2",{id:"exemple-dune-classe"},"Exemple d'une classe"),Object(a.b)("p",null,"La classe est indiqu\xe9e par le bloc de code ",Object(a.b)("inlineCode",{parentName:"p"},"class")," qui va contenir diff\xe9rentes m\xe9thodes de la classe."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),"import random\n\n# Simulation d'une pi\xe8ce de monaie\n\nclass Coin:\n    \n    # __init__ initialise a 'Face'.\n    \n    def __init__(self):\n        self.sideup = 'Face'\n    \n    def toss(self):\n        # G\xe9n\xe9ration al\xe9atoire de nombre pour\n        # \"lancer\" la pi\xe8ce\n        if random.randint(0, 1) == 0:\n            self.sideup = 'Face'\n        else:\n            self.sideup = 'Pile'\n\n    # Retourne l'\xe9tat courant de la pi\xe8ce\n    \n    def get_sideup(self):\n        return self.sideup\n\n\n")),Object(a.b)("h2",{id:"m\xe9thodes-dune-classe"},"M\xe9thodes d'une classe"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Les m\xe9thodes sont des d\xe9finitions de fonctions \xe0 l'int\xe9rieur d'une classe.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Chaque fonction doit recevoir le param\xe8tre obligatoire ",Object(a.b)("inlineCode",{parentName:"p"},"self"),". Le ",Object(a.b)("inlineCode",{parentName:"p"},"self")," fait r\xe9f\xe9rence \xe0 l'instance de l'objet \xe0 manipuler.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"La m\xe9thode ",Object(a.b)("inlineCode",{parentName:"p"},"__init__")," est sp\xe9ciale, car c'est la m\xe9thode qui sera appel\xe9e \xe0 l'initialisation d'une nouvelle instance (un objet) de la classe. Elle permet donc d'initialiser les diff\xe9rentes donn\xe9es de l'instance.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Les attributs sont attach\xe9s au ",Object(a.b)("inlineCode",{parentName:"p"},"self")," et peuvent \xeatre ensuite modifi\xe9 en utilisant l'op\xe9rateur ",Object(a.b)("inlineCode",{parentName:"p"},"."),"."))),Object(a.b)("h2",{id:"cr\xe9ation-dobjets-\xe0-partir-dune-classe"},"Cr\xe9ation d'objets \xe0 partir d'une classe"),Object(a.b)("p",null,"Suivant l'exemple de la classe ",Object(a.b)("inlineCode",{parentName:"p"},"Coin"),":"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),"def main():\n    # Cr\xe9ation de l'objet avec la m\xe9thode init\n    my_coin = Coin()\n\n    # Affiche l'\xe9tat de la pi\xe8ce\n    print('This side is up:', my_coin.get_sideup())\n\n    # Lance la pi\xe8ce\n    print('I am tossing the coin...')\n    my_coin.toss()\n\n    # Affiche l'\xe9tat de la pi\xe8ce\n    print('This side is up:', my_coin.get_sideup())\n    \nmain()\n\n")),Object(a.b)("h2",{id:"attributs-priv\xe9s"},"Attributs priv\xe9s"),Object(a.b)("p",null,"Il est possible de cacher les attributs pour que ceux-ci ne soient pas accessibles \xe0 l'ext\xe9rieur de la classe."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),"import random\n\nclass Coin:\n\n    def __init__(self):\n        self.__sideup = 'Heads'\n\n    def toss(self):\n        if random.randint(0, 1) == 0:\n            self.__sideup = 'Heads'\n        else:\n            self.__sideup = 'Tails'\n\n    def get_sideup(self):\n        return self.__sideup\n")),Object(a.b)("p",null,"Les attributs avec deux tirets bas seront cach\xe9s \xe0 un acc\xe8s public."),Object(a.b)("h2",{id:"multiple-instance"},"Multiple instance"),Object(a.b)("p",null,"Chaque objet aura ses propres valeurs dans les attributs."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),"\ndef main():\n    coin1 = Coin()\n    coin2 = Coin()\n    coin3 = Coin()\n\n    print('I have three coins with these sides up:')\n    print(coin1.get_sideup())\n    print(coin2.get_sideup())\n    print(coin3.get_sideup())\n    print()\n    \n    print('I am tossing all three coins...')\n    print()\n    coin1.toss()\n    coin2.toss()\n    coin3.toss()\n\n    print('Now here are the sides that are up:')\n    print(coin1.get_sideup())\n    print(coin2.get_sideup())\n    print(coin3.get_sideup())\n    print()\n\nmain()\n\n")),Object(a.b)("h2",{id:"accesseurs-et-mutateurs"},"Accesseurs et mutateurs"),Object(a.b)("p",null,"Pour avoir un meilleur contr\xf4le sur les donn\xe9es des objets, on utilise habituellement des attributs priv\xe9s et on expose des m\xe9thodes d'acc\xe8s (get) et de mutation (set) pour travailler sur les attributs."),Object(a.b)("p",null,"Par exemple, l'attribut ",Object(a.b)("inlineCode",{parentName:"p"},"__sideup")," de la classe ",Object(a.b)("inlineCode",{parentName:"p"},"Coin")," pourrait avoir la m\xe9thode ",Object(a.b)("inlineCode",{parentName:"p"},"get_sideup")," qui retourne la valeur de l'attribut et la m\xe9thode ",Object(a.b)("inlineCode",{parentName:"p"},"set_sideup")," qui re\xe7oit et assigne une nouvelle valeur \xe0 l'attribut. Les m\xe9thodes d'acc\xe8s et de mutations permettent d'ajouter de la validation \xe0 la modification d'attributs."))}u.isMDXComponent=!0}}]);