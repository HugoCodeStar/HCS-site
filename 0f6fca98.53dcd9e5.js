(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{122:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),o=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=o(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,a=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=o(n),b=r,m=d["".concat(a,".").concat(b)]||d[b]||p[b]||l;return n?i.a.createElement(m,s(s({ref:t},c),{},{components:n})):i.a.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=b;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var c=2;c<l;c++)a[c]=n[c];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},59:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return o}));var r=n(2),i=n(6),l=(n(0),n(122)),a={title:"Programmes \xe0 faire de l'atelier 4",sidebar_label:"4 - Listes et tuples"},s={unversionedId:"inf1256/atelier/atelier4",id:"inf1256/atelier/atelier4",isDocsHomePage:!1,title:"Programmes \xe0 faire de l'atelier 4",description:"affichedoubleliste",source:"@site/docs/inf1256/atelier/atelier4.md",slug:"/inf1256/atelier/atelier4",permalink:"/site/docs/inf1256/atelier/atelier4",editUrl:"https://github.com/HugoCodeStar/site/edit/master/docs/inf1256/atelier/atelier4.md",version:"current",sidebar_label:"4 - Listes et tuples",sidebar:"INF1256Sidebar",previous:{title:"Programmes \xe0 faire de l'atelier 3",permalink:"/site/docs/inf1256/atelier/atelier3"},next:{title:"Programmes \xe0 faire de l'atelier 5",permalink:"/site/docs/inf1256/atelier/atelier5"}},u=[{value:"affiche_double_liste",id:"affiche_double_liste",children:[]},{value:"produit_cumulatif",id:"produit_cumulatif",children:[]},{value:"indice_min_liste",id:"indice_min_liste",children:[]},{value:"diff_entre_max_min",id:"diff_entre_max_min",children:[]},{value:"tout_indice_min_liste",id:"tout_indice_min_liste",children:[]},{value:"suppr_valeur_seuil",id:"suppr_valeur_seuil",children:[]},{value:"ecart_type",id:"ecart_type",children:[]},{value:"dist_entre_points",id:"dist_entre_points",children:[]}],c={rightToc:u};function o(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"affiche_double_liste"},"affiche_double_liste"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{}),"Affiche les valeurs doubl\xe9es de chaque \xe9l\xe9ments de la liste\n\nArgs:\n    liste: La liste de valeurs \xe0 doubler et afficher.\n")),Object(l.b)("p",null,"Exemple :"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{}),">> affiche_double_liste([4, 5, 12, 11])\n8\n10\n24\n22\n")),Object(l.b)("h2",{id:"produit_cumulatif"},"produit_cumulatif"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{}),"Produit cumulatif des valeurs d'une liste.\n\nArgs:\n    liste: Liste de valeurs\n\nReturns:\n    Produit cumulatif des valeurs\n")),Object(l.b)("h2",{id:"indice_min_liste"},"indice_min_liste"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{}),"Indice de position de la valeur la plus petite de la liste.\n\nArgs:\n    liste: Liste de valeurs\n\nReturns:\n    Indice de la valeur minimum de la liste.\n")),Object(l.b)("h2",{id:"diff_entre_max_min"},"diff_entre_max_min"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{}),"Diff\xe9rence entre la valeur maxium et la valeur minimum de la liste.\n\nArgs:\n    liste: Liste de valeurs\n\nReturns:\n    La diff\xe9rence entre le min et max.\n")),Object(l.b)("h2",{id:"tout_indice_min_liste"},"tout_indice_min_liste"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{}),"Tous les indices de positions de la valeur minimum. Avec plusieurs emplacements\nde la valeur minimum. On retourne une liste de positions.\n\nArgs:\n    liste: Liste de valeurs\n\nReturns:\n    Liste de positions du minimum\n")),Object(l.b)("h2",{id:"suppr_valeur_seuil"},"suppr_valeur_seuil"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{}),"Supprime tous les \xe9l\xe9ments plus grand que la valeur de seuil.\n\nArgs:\n    seuil: Valeur de seuil\n    liste: Liste de valeurs\n\nReturns:\n    Liste modifi\xe9 avec les valeurs plus grandes que le seuil supprimer.\n")),Object(l.b)("h2",{id:"ecart_type"},"ecart_type"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{}),"D\xe9termine l'\xe9cart type des valeurs de la liste.\n\nArgs:\n    liste: Liste de valeurs\n\nReturns:\n    L'\xe9cart type de la liste.\n")),Object(l.b)("h2",{id:"dist_entre_points"},"dist_entre_points"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{}),"D\xe9termine la distance entre deux points de coodonn\xe9es cart\xe9siennes.\n\nArgs:\n    point1: Liste de deux \xe9l\xe9ments qui repr\xe9sente la point en [x, y]\n    point2: Liste de deux \xe9l\xe9ments qui repr\xe9sente la point en [x, y]\n\nReturns:\n    Distance entre les deux points re\xe7us.\n")))}o.isMDXComponent=!0}}]);